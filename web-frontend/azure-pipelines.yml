trigger:
  branches:
    include:
      - master
      - develop
      - feature/*
      - release/*
      - bugfix/*
      - hotfix/*
  paths:
    include:
      - /web-frontend/*

pool:
  name: Default
  demands: maven

steps:
- task: Maven@3
  displayName: 'Maven Package'
  inputs:
    mavenPomFile: 'web-frontend/pom.xml'
    options: '-ntp'
    codeCoverageToolOption: JaCoCo
    codeCoverageFailIfEmpty: true
    javaHomeOption: Path
    jdkDirectory: '/usr/lib/jvm/java-8-openjdk-amd64'

- task: Maven@3
  displayName: 'Maven Site'
  inputs:
    mavenPomFile: 'web-frontend/pom.xml'
    goals: site
    options: '-ntp'
    publishJUnitResults: false
    javaHomeOption: Path
    jdkDirectory: '/usr/lib/jvm/java-8-openjdk-amd64'

- task: CopyFiles@2
  displayName: 'Copy WAR files to: $(build.artifactstagingdirectory)/webapp'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**/*.war'
    TargetFolder: '$(build.artifactstagingdirectory)/webapp'
    CleanTargetFolder: true
    OverWrite: true
    flattenFolders: true
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: WebApp'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)/webapp'
    ArtifactName: WebApp
  condition: succeededOrFailed()

- task: CopyFiles@2
  displayName: 'Copy MVN Site to: $(build.artifactstagingdirectory)/mvn-site'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)/web-frontend/target/site/'
    TargetFolder: '$(build.artifactstagingdirectory)/mvn-site'
    CleanTargetFolder: true
    OverWrite: true
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: MVN Site'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)/mvn-site'
    ArtifactName: 'MVN Site'
  condition: succeededOrFailed()
